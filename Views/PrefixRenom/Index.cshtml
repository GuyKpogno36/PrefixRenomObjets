@using CERGI.MODULES.BAS
@using CERGI.MODULES.EXTENSIONS
@model PrefixRenomObjets.Models.PrefixRenom

@{
    ViewBag.Title = "PrefixRenom";
    ViewBag.Topic = "Préfixation d'Objets";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-xs-5">
    <div style="display:inline;" class="btn-group">
        <button class="btn btn-sm btn-primary btn_save " type="button" data-toggle="tooltip"><span class=" glyphicon glyphicon-floppy-disk"></span>&nbsp; Valider</button>
        <button class="btn btn-sm btn-primary" id="btn_download" type="button" data-toggle="tooltip" style="float: none;"><span class="glyphicon glyphicon-download"></span>&nbsp; Télécharger</button>
    </div>
</div>
<div class="col-xs-7 _alert"></div>
<div class="col-xs-12">
    <div class="col-xs-12 form_space">
        <div class="space_seperate"></div>
        <div class="row div_form">
            <div class="col-lg-12 col-sm-12 col-md-12">
                <div class="row">
                    <div class="bodyTitle"><h3></h3></div>
                    <div class="row push_body">
                        @using (Html.BeginForm(actionName: "Edit", controllerName: "PrefixRenom", method: FormMethod.Post, htmlAttributes: new { @id = "form_prefix_renom" }))
                        {
                            <div class="col-xs-12">
                                <br />
                                <label class="col-md-3 col-xs-12 no_padd" id="term_label" for="prefix_term">Terme de préfixation</label>
                                <div class="col-md-3 col-xs-5">
                                    @Html.TextBoxFor(model => model.PREFIX_TERM, new { @class = "form-control" })
                                </div>
                                <label class="col-md-3 col-xs-12 no_padd" id="file_type_DIV" for="type_fichier">Type de fichier</label>
                                <div class="col-md-3 col-xs-5 ">
                                    @Html.DropDownListFor(model => model.TYPE_FICHIER,
                                        new SelectList(Model.listTypesFichiers, "TYPE_FICHIER", "LIB_TYPE_FICHIER"), "Sélectionnez un type de fichier",
                                        new { @class = "form-control selectpicker" })
                                </div>
                            </div>
                            <div class="col-xs-12">
                                <br />
                                <label class="col-md-3 col-xs-12 term_label no_padd" for="chemin_fichier_cible">Chemin du fichier ou du répertoire</label>
                                <div class="col-md-3 col-xs-5 ">
                                    <div class="col-md-1">
                                        <button class="btn btn-sm btn-primary btn_upload_cible" data-toggle="tooltip" type="button" title="Charger" id="uploadFileCible"><span class=" glyphicon glyphicon-upload"></span></button>
                                    </div>
                                    <div class="col-md-1">
                                        <label id="nomFichier" class=""></label>
                                        <div id="divHideInputFileAppFichierCible" class="hidden">
                                            <input type="file" name="hideInputFileAppFichierCible" class="pull-left" id="hideInputFileAppFichierCible" element="0" contenteditable="false" />
                                            <input type="file" id="folderInput" webkitdirectory multiple>
                                        </div>
                                        <p id="retourUploadFichierCible" hidden></p>
                                    </div>
                                    <div class="_mt10 col-md-10 no_padd">
                                        <div style="margin-top: -15px;" id='CHEMIN_FICHIER_CIBLE'>&nbsp;&nbsp;</div>
                                    </div>
                                </div>
                                <label class="col-md-3 col-xs-12 term_label no_padd" for="chemin_fichier_liste">Chemin de la liste des objets</label>
                                <div class="col-md-3 col-xs-5 ">
                                    <div class="col-md-1">
                                        <button class="btn btn-sm btn-primary btn_upload_liste" data-toggle="tooltip" type="button" title="Charger" id="uploadFileListe"><span class=" glyphicon glyphicon-upload"></span></button>
                                    </div>
                                    <div class="col-md-1">
                                        <label id="nomFichier" class=""></label>
                                        <div id="divHideInputFileAppFichierListe" class="hidden">
                                            <input type="file" name="hideInputFileAppFichierListe" class="pull-left" id="hideInputFileAppFichierListe" element="0" contenteditable="false" />
                                        </div>
                                        <p id="retourUploadFichierListe" hidden></p>
                                    </div>
                                    <div class="_mt10 col-md-10 no_padd">
                                        <div style="margin-top: -15px;" id='CHEMIN_FICHIER_LISTE'>&nbsp;&nbsp;</div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="col-xs-12 form_alert no_marg"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*<div class='_container col-md-12'>
            <div class="col-xs-6 _alert"></div>
            <div class="col-xs-12 form_space">
                <div class="space_seperate"></div>
                <div class="row div_form">
                    <div class="col-lg-12 col-sm-12 col-md-12">
                        <div class="row">
                            <div class="bodyTitle"><h3>Saisie des informations</h3></div>
                            <div class="row push_body">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
</div>
<div id="modal_start" class="modal fade col-md-4 col-md-offset-4 col-sm-8 col-sm-offset-2 col-xs-10 col-xs-offset-1" data-backdrop="true">
    <div class="modal-dialog " style="width: 100%; text-align: center; align-content: center">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close closeX" data-dismiss="modal" style="color: white; margin-left: 10px;">&times;</button>
                <strong>ACTION À EFFECTUER</strong>
            </div>
            <div class="modal-body">
                <div class="row push_body">
                    Voulez-vous modifier un fichier ou un dossier de fichiers ?
                    <div class="col-xs-12 no_padd">
                        <br />
                        <div class="col-md-6 col-xs-6 ">
                            <input type="radio" id="choix_fichier" name="Choix_Cible" value="fichier" class="col-md-6 col-xs-12 no_padd">
                            <label class="col-md-6 col-xs-12 no_padd" for="choix_fichier">Fichier</label>
                        </div>
                        <div class="col-md-6 col-xs-6 ">
                            <input type="radio" id="choix_dossier" name="Choix_Cible" value="dossier" class="col-md-6 col-xs-12 no_padd">
                            <label class="col-md-6 col-xs-12 no_padd" for="choix_dossier">Dossier</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="text-align: center">
                <button class="btn btn-primary valid_choix_cible"> VALIDER </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.bootstrap-select').hide();
            document.getElementById('btn_download').style.display = "none";
            $('#modal_start').modal('show');
        });

        var checker_post = "";

        $('.valid_choix_cible').on('click', function () {
            if (document.getElementById('choix_dossier').checked) {
                document.getElementById('file_type_DIV').style.display = "block";
                document.getElementById('TYPE_FICHIER').style.display = "block";
                checker_post = "D";
                $('#modal_start').modal('hide');
            }
            else if (document.getElementById('choix_fichier').checked) {
                document.getElementById('file_type_DIV').style.display = "none";
                document.getElementById('TYPE_FICHIER').style.display = "none";
                checker_post = "F";
                $('#modal_start').modal('hide');
            }
            else
                $('.form_alert').html('<div class="alert alert-danger no_marg">' +
                    '<button type="button" class="close" data-dismiss="alert">&times;</button>' +
                    '<strong>Attention!</strong><br/>Veuillez selectionner une option' +
                    '</div>');
        });

        var fileKeys = { "Cible": null, "Liste": null, "Dossier": null };

        $('#uploadFileCible').on('click', function () {
            if (checker_post === "D") $("#folderInput").trigger("click");
            else $("#hideInputFileAppFichierCible").trigger("click");
        });

        $('#uploadFileListe').on('click', function () {
            $("#hideInputFileAppFichierListe").trigger("click");
        });

        $('#hideInputFileAppFichierCible').change(function () {
            var allowedExtensions = ['.txt', '.csv', '.xls', '.xlsx', '.doc', '.docx', '.sql'];
            var nomfile = $("#hideInputFileAppFichierCible").val().substring(12, $("#hideInputFileAppFichierCible").val().length);
            var fileExtension = nomfile.substring(nomfile.lastIndexOf('.')).toLowerCase();

            if (allowedExtensions.map(ext => ext.toLowerCase()).includes(fileExtension)) {
                $("#CHEMIN_FICHIER_CIBLE").append(nomfile);

                var url =  '@Url.Action("UploadFile")'
                $(this).upload(url, function (res) {
                    $('._alert').html('<div class="alert alert-success no_marg">' +
                        '<button type="button" class="close" data-dismiss="alert">&times;</button>' +
                        '<strong>Fichier déposé !</strong></div>');
                    fileKeys["Cible"] = $("#hideInputFileAppFichierCible").val();
                }, 'json');
            } else {
                $('._alert').html('<div class="alert alert-danger no_marg">' +
                    '<button type="button" class="close" data-dismiss="alert">&times;</button>' +
                    '<strong>Erreur !</strong><br/> Le format du fichier n\'est pas supporté' +
                    '<br /> Veuillez sélectionner un fichier avec une des extensions suivantes : ' + allowedExtensions.join(', ') +
                    '</div>');
                $("#hideInputFileAppFichierCible").val("");
                return;
            }
        });

        $('#folderInput').change(function () {
            var files = $('#folderInput')[0].files;
            var fileList = [];
            var folderPath = $("#CHEMIN_FICHIER_CIBLE").val();
            var formData = new FormData();

            for (var i = 0; i < files.length; i++) {
                fileList.push(files[i].webkitRelativePath);

                var taille = fileList[i].length - (files[i].name.length + 1);
                if (folderPath === "") {
                    $("#CHEMIN_FICHIER_CIBLE").append(fileList[i].substring(0, taille));
                    folderPath = fileList[i].substring(0, taille);
                }
                formData.append('files', files[i]);
            }

            $.ajax({
                url: '@Url.Action("UploadFolder")',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    $('._alert').html('<div class="alert alert-success no_marg">' +
                        '<button type="button" class="close" data-dismiss="alert">&times;</button>' +
                        '<strong>Dossier déposé !</strong></div>');
                    fileKeys["Dossier"] = $("#folderInput").val();
                },
                error: function (error) {
                    $('._alert').html('<div class="alert alert-danger no_marg">' +
                        '<button type="button" class="close" data-dismiss="alert">&times;</button>' +
                        '<strong>Erreur !</strong><br/> Erreur lors du chargement du dossier.' +
                        '</div>');
                }
            });
        });

        $('#hideInputFileAppFichierListe').change(function () {
            var allowedExtensions = ['.txt', '.csv', '.xls', '.xlsx', '.doc', '.docx', '.sql'];
            var nomfile = $("#hideInputFileAppFichierListe").val().substring(12, $("#hideInputFileAppFichierListe").val().length);
            var fileExtension = nomfile.substring(nomfile.lastIndexOf('.')).toLowerCase();

            if (allowedExtensions.map(ext => ext.toLowerCase()).includes(fileExtension)) {
                $("#CHEMIN_FICHIER_LISTE").append(nomfile);

                var url =  '@Url.Action("UploadFile")'
                $(this).upload(url, function (res) {
                    $('._alert').html('<div class="alert alert-success no_marg">' +
                        '<button type="button" class="close" data-dismiss="alert">&times;</button>' +
                        '<strong>Fichier déposé !</strong></div>');
                    fileKeys["Liste"] = $("#hideInputFileAppFichierListe").val();
                }, 'json');
            } else {
                $('._alert').html('<div class="alert alert-danger no_marg">' +
                    '<button type="button" class="close" data-dismiss="alert">&times;</button>' +
                    '<strong>Erreur !</strong><br/> Le format du fichier n\'est pas supporté' +
                    '<br /> Veuillez sélectionner un fichier avec une des extensions suivantes : ' + allowedExtensions.join(', ') +
                    '</div>');
                $("#hideInputFileAppFichierListe").val("");
                return;
            }
        });

        $('.btn_save').on('click', function () {
            var Prefix_Term = $("#PREFIX_TERM").val();
            var Type_Fichier = $("#TYPE_FICHIER").val() === "" ? "" : $("#TYPE_FICHIER").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("OpererPrefixage")',
                data: { prefix: Prefix_Term, type_fichier: Type_Fichier },
                success: function (data) {
                    $('._alert').html('<div class="alert alert-success no_marg">' +
                        '<button type="button" class="close" data-dismiss="alert">&times;</button>' +
                        '<strong>Opération réussie!</strong><br/>Vous pouvez checker le(s) fichier(s) modifiés dans le répertoire de la solution.'
                        + '<br/>ou le(s) télécharger avant réactualisation de la page dans <b><span id="timer">15</span></b> secondes.' +
                        '</div>');
                    document.getElementById('btn_download').style.display = "inline";
                    if (data.type === "Cible") { fileKeys["Cible"] = data.file; fileKeys["Dossier"] = ""; }
                    else { fileKeys["Dossier"] = data.file; fileKeys["Cible"] = ""; }

                    var countdown = 15;
                    var timerInterval = setInterval(function () {
                        countdown--;
                        $('#timer').text(countdown);
                        if (countdown <= 0) {
                            clearInterval(timerInterval);
                            location.reload();
                        }
                    }, 1000);
                },
                error: function () {
                    alert("Une erreur s'est produite..");
                }
            });
        });

        $('#btn_download').on('click', function () {
            var tempFolderPath = fileKeys["Cible"] === "" ? fileKeys["Dossier"] : fileKeys["Cible"];
            window.open("@Url.Action("Download", new { tempFolderPath = "Param" })".replace("Param", tempFolderPath));
            @*$.ajax({
                type: 'POST',
                url: '@Url.Action("Download")',
                data: { tempFolderPath: tempFolderPath },
                success: function (data) {
                    var countdown = 3;
                    var timerInterval = setInterval(function () {
                        countdown--;
                        $('#timer').text(countdown);
                        if (countdown <= 0) {
                            clearInterval(timerInterval);
                            location.reload();
                        }
                    }, 1000);
                },
                error: function () {
                    alert("Une erreur s'est produite..");
                }
            });*@
        });

    </script>
}
